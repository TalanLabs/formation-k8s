apiVersion: apps/v1
kind: Deployment
metadata:
  name: back
  namespace: {{ .Release.Namespace }}
  labels:
    app: formation-back
spec:
  replicas: 1
  selector:
    matchLabels:
      app: formation-back
  template:
    metadata:
      labels:
        app: formation-back
    spec:
      containers:
        - name: back
          image: 810454728139.dkr.ecr.eu-west-3.amazonaws.com/formation-k8s-back:latest
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: env-config
          ports:
            - containerPort: 8080
              name: web
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: web
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /
              port: web
              scheme: HTTP
          volumeMounts:
            - name: myvolume
              mountPath: /app/bdd
      initContainers:
        - name: create-dir
          image: busybox
          command: ["sh", "-c", "mkdir -p /app/bdd/ && echo {\\\"flag\\\": \\\"SECRET_123\\\"} > /app/bdd/bdd.json"]

          volumeMounts:
            - name: myvolume
              mountPath: /app/bdd
      volumes:
        - name: myvolume
          persistentVolumeClaim:
            claimName: myvolume
---
apiVersion: v1
kind: Service
metadata:
  name: back-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: formation-back
spec:
  selector:
    app: formation-back
  type: ClusterIP
  ports:
    - name: web
      port: 80
      targetPort: 8080
      protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: myvolume
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc-{{ .Values.username | replace "." "-" }}
  resources:
    requests:
      storage: 100Mi
